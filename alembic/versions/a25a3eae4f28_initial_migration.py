"""initial migration

Revision ID: a25a3eae4f28
Revises: 
Create Date: 2025-10-05 01:47:34.075687

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "a25a3eae4f28"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "player",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("nick_name", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("created", sa.DateTime(timezone=True), nullable=True),
        sa.Column("modified", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_deleted", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_player_created"), "player", ["created"], unique=False)
    op.create_index(
        op.f("ix_player_is_deleted"), "player", ["is_deleted"], unique=False
    )
    op.create_index(op.f("ix_player_modified"), "player", ["modified"], unique=False)
    op.create_table(
        "game",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("status", sa.String(), nullable=True),
        sa.Column("board", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("player_1", sa.INTEGER(), nullable=True),
        sa.Column("player_2", sa.INTEGER(), nullable=True),
        sa.Column("current_turn", sa.INTEGER(), nullable=True),
        sa.Column("winner", sa.INTEGER(), nullable=True),
        sa.Column("created", sa.DateTime(timezone=True), nullable=True),
        sa.Column("modified", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_deleted", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["current_turn"], ["player.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["player_1"], ["player.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["player_2"], ["player.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["winner"], ["player.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("uuid"),
    )
    op.create_index(op.f("ix_game_created"), "game", ["created"], unique=False)
    op.create_index(
        op.f("ix_game_current_turn"), "game", ["current_turn"], unique=False
    )
    op.create_index(op.f("ix_game_is_deleted"), "game", ["is_deleted"], unique=False)
    op.create_index(op.f("ix_game_modified"), "game", ["modified"], unique=False)
    op.create_index(op.f("ix_game_player_1"), "game", ["player_1"], unique=False)
    op.create_index(op.f("ix_game_player_2"), "game", ["player_2"], unique=False)
    op.create_index(op.f("ix_game_winner"), "game", ["winner"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_game_winner"), table_name="game")
    op.drop_index(op.f("ix_game_player_2"), table_name="game")
    op.drop_index(op.f("ix_game_player_1"), table_name="game")
    op.drop_index(op.f("ix_game_modified"), table_name="game")
    op.drop_index(op.f("ix_game_is_deleted"), table_name="game")
    op.drop_index(op.f("ix_game_current_turn"), table_name="game")
    op.drop_index(op.f("ix_game_created"), table_name="game")
    op.drop_table("game")
    op.drop_index(op.f("ix_player_modified"), table_name="player")
    op.drop_index(op.f("ix_player_is_deleted"), table_name="player")
    op.drop_index(op.f("ix_player_created"), table_name="player")
    op.drop_table("player")
    # ### end Alembic commands ###
